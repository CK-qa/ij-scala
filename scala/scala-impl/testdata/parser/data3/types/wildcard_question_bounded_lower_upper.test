val x: Class[? >: Test1 <: Test2] = ???
-----
ScalaFile
  ScPatternDefinition: x
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      ReferencePattern: x
        PsiElement(identifier)('x')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    ParametrizedType: Class[? >: Test1 <: Test2]
      SimpleType: Class
        CodeReferenceElement: Class
          PsiElement(identifier)('Class')
      TypeArgumentsList
        PsiElement([)('[')
        WildcardType: ? >: Test1 <: Test2
          PsiElement(?)('?')
          PsiWhiteSpace(' ')
          PsiElement(>:)('>:')
          PsiWhiteSpace(' ')
          SimpleType: Test1
            CodeReferenceElement: Test1
              PsiElement(identifier)('Test1')
          PsiWhiteSpace(' ')
          PsiElement(<:)('<:')
          PsiWhiteSpace(' ')
          SimpleType: Test2
            CodeReferenceElement: Test2
              PsiElement(identifier)('Test2')
        PsiElement(])(']')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    ReferenceExpression: ???
      PsiElement(identifier)('???')
