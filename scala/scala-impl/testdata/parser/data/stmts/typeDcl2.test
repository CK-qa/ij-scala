abstract class base{
  type f >:Int <:Any
}
-----
ScalaFile
  ScClass: base
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(abstract)('abstract')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('base')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDeclaration: f
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f')
          PsiWhiteSpace(' ')
          PsiElement(>:)('>:')
          SimpleType: Int
            CodeReferenceElement: Int
              PsiElement(identifier)('Int')
          PsiWhiteSpace(' ')
          PsiElement(<:)('<:')
          SimpleType: Any
            CodeReferenceElement: Any
              PsiElement(identifier)('Any')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
