class CurriedFuncTest {

  def func[T](i: Int,  b: Boolean,  func: T => Any) = func

  def alias[T] = func(1, _: Boolean,  _: T => Any)

  def alias2[T] = func(1, _: Boolean,  _: Function1[T, Any])
}
-----
ScalaFile
  ScClass: CurriedFuncTest
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('CurriedFuncTest')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: func
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('func')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: i
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('i')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
              PsiElement(,)(',')
              PsiWhiteSpace('  ')
              Parameter: b
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('b')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Boolean
                    CodeReferenceElement: Boolean
                      PsiElement(identifier)('Boolean')
              PsiElement(,)(',')
              PsiWhiteSpace('  ')
              Parameter: func
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('func')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  FunctionalType: T => Any
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    SimpleType: Any
                      CodeReferenceElement: Any
                        PsiElement(identifier)('Any')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: func
            PsiElement(identifier)('func')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: alias
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('alias')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: func
              PsiElement(identifier)('func')
            ArgumentList
              PsiElement(()('(')
              IntegerLiteral
                PsiElement(integer)('1')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              TypedStatement
                UnderscoreSection
                  PsiElement(_)('_')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Boolean
                  CodeReferenceElement: Boolean
                    PsiElement(identifier)('Boolean')
              PsiElement(,)(',')
              PsiWhiteSpace('  ')
              TypedStatement
                UnderscoreSection
                  PsiElement(_)('_')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                FunctionalType: T => Any
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  SimpleType: Any
                    CodeReferenceElement: Any
                      PsiElement(identifier)('Any')
              PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: alias2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('alias2')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: func
              PsiElement(identifier)('func')
            ArgumentList
              PsiElement(()('(')
              IntegerLiteral
                PsiElement(integer)('1')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              TypedStatement
                UnderscoreSection
                  PsiElement(_)('_')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Boolean
                  CodeReferenceElement: Boolean
                    PsiElement(identifier)('Boolean')
              PsiElement(,)(',')
              PsiWhiteSpace('  ')
              TypedStatement
                UnderscoreSection
                  PsiElement(_)('_')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Function1[T, Any]
                  SimpleType: Function1
                    CodeReferenceElement: Function1
                      PsiElement(identifier)('Function1')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: Any
                      CodeReferenceElement: Any
                        PsiElement(identifier)('Any')
                    PsiElement(])(']')
              PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
