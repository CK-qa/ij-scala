package org.jetbrains.plugins.scala.lang.typeInference
package generated

class TypeInferencePatternTest extends TypeInferenceTestBase {
  //This class was generated by build script, please don't change this
  override def folderPath: String = super.folderPath + "pattern/"

  def testCompositePattern(): Unit = {doTest()}

  def testContextResolve(): Unit = {doTest()}

  def testDependent(): Unit = {doTest()}

  def testForRecursive(): Unit = {doTest()}

  def testInfixToTypeAlias(): Unit = {doTest()}

  def testLocalTypeInference(): Unit = {doTest()}

  def testMatchUnapply(): Unit = {doTest()}

  def testNamedConstructorPattern(): Unit = {doTest()}

  def testNamingExtractorPattern(): Unit = {doTest()}

  def testNewEarlyDefinitions(): Unit = {doTest()}

  def testOptionOfTuple(): Unit = {doTest()}

  def testParamExtractor(): Unit = {doTest()}

  def testPatternGLB(): Unit = {doTest()}

  def testPatternOption(): Unit = {doTest()}

  def testPatternUnapply(): Unit = {doTest()}

  def testRangeMapping(): Unit = {doTest()}

  def testSCL3749(): Unit = {doTest()}

  def testSCL6543(): Unit = {doTest()}

  def testUnapplySeqLocalTypeInference(): Unit = {doTest()}
}