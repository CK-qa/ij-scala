def process(exchange: Exchange) {
      <selection>
      val events = exchange.getIn.getHeader(Exchange.GROUPED_EXCHANGE).asInstanceOf[juList]
      events.foreach { _ match {
        case event: MTCEvent => println("foo")
      }}
      eventFacts.get(key(event)) match {
        case Some(factHandle) => session update (factHandle, event)
        case None => eventFacts update (key(event), session insert event)
      }
      session fireAllRules
      </selection>
}
-----
0(1) element: None
1(2) READ exchange
2(3) READ Exchange
3(4) VAL events
4(5) READ events
5(6,8) element: MatchStatement
6(7) VAL event
7(8) READ println
8(9,17,24) element: MatchStatement
9(10) READ eventFacts
10(11) READ key
11(12) READ event
12(13) VAL factHandle
13(14) READ session
14(15) READ update
15(16) READ factHandle
16(24) READ event
17(18) READ eventFacts
18(19) READ update
19(20) READ key
20(21) READ event
21(22) READ session
22(23) READ insert
23(24) READ event
24(25) READ session
25(26) READ fireAllRules
26() element: None