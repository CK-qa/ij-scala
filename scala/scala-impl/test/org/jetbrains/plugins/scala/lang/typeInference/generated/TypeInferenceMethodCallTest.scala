package org.jetbrains.plugins.scala.lang.typeInference
package generated

class TypeInferenceMethodCallTest extends TypeInferenceTestBase {
  //This class was generated by build script, please don't change this
  override def folderPath: String = super.folderPath + "methodCall/"

  def testApplyArray(): Unit = {doTest()}

  def testApplyCall(): Unit = {doTest()}

  def testApplyList(): Unit = {doTest()}

  def testApplySeqCall(): Unit = {doTest()}

  def testCaseClassCall(): Unit = {doTest()}

  def testCharAt(): Unit = {doTest()}

  def testExplicitStringCharAt(): Unit = {doTest()}

  def testFunctionApply(): Unit = {doTest()}

  def testFunctionApplyReturnTypeAlsoHasApplyMethod(): Unit = {doTest()}

  def testFunctionApplyWithParams(): Unit = {doTest()}

  def testFunctionDirectCall(): Unit = {doTest()}

  def testFunctionLiteralApplyCall(): Unit = {doTest()}

  def testFunctionLiteralCall(): Unit = {doTest()}

  def testHashaSetCreation(): Unit = {doTest()}

  def testImplicitApply(): Unit = {doTest()}

  def testInfixIntegers(): Unit = {doTest()}

  def testLibraryList(): Unit = {doTest()}

  def testMacroCall(): Unit = {doTest()}

  def testMapApply(): Unit = {doTest()}

  def testObjectApplyCall(): Unit = {doTest()}

  def testOverloadedCall(): Unit = {doTest()}

  def testPrivateElementFromContext(): Unit = {doTest()}

  def testRecursive(): Unit = {doTest()}

  def testReduceLeft(): Unit = {doTest()}
  
  def testRepeated2(): Unit = {doTest()}

  def testSCL1760(): Unit = {doTest()}

  def testSimpleCall(): Unit = {doTest()}

  def testSimpleCall2(): Unit = {doTest()}

  def testSimpleStringCharAt(): Unit = {doTest()}

  def testSplit(): Unit = {doTest()}

  def testStaticCall(): Unit = {doTest()}

  def testSuperCall(): Unit = {doTest()}

  def testThisTypeCompound(): Unit = {doTest()}

  def testThisTypeSimple(): Unit = {doTest()}

  def testUpdateCall(): Unit = {doTest()}
}