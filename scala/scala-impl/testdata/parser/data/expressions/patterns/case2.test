class A{
def foo={
case 1=>
case 2=>
}
}
-----
ScalaFile
  ScClass: A
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('A')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n')
        ScFunctionDefinition: foo
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('foo')
          Parameters
            <empty list>
          PsiElement(=)('=')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                LiteralPattern
                  IntegerLiteral
                    PsiElement(integer)('1')
                PsiElement(=>)('=>')
                BlockOfExpressions
                  <empty list>
              PsiWhiteSpace('\n')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                LiteralPattern
                  IntegerLiteral
                    PsiElement(integer)('2')
                PsiElement(=>)('=>')
                BlockOfExpressions
                  <empty list>
            PsiWhiteSpace('\n')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
